# Template used https://superface.ai/blog/npm-publish-gh-actions-changelog
name: Release

on:
  workflow_dispatch:
    # Inputs the workflow accepts. See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
    inputs:
      releaseType:
        description: 'Choose release type'
        default: 'patch'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: write

jobs:
  github-release:
    runs-on: ubuntu-latest
    outputs:
      NEW_VERSION: ${{ steps.releaseVersionUpdate.NEW_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Git configuration
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "Github Actions on behalf of @${{ github.triggering_actor }}"
      - name: Bump Release Version
        id: releaseVersionUpdate
        run: echo "NEW_VERSION=$(npm version ${{ inputs.releaseType }})" >> $GITHUB_OUTPUT
      - name: Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout -b release/${{ env.NEW_VERSION }}
          git push origin release/${{ env.NEW_VERSION }} && git push origin ${{ env.NEW_VERSION }}
      - name: Merge Release Data via Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'Release ${{ env.NEW_VERSION }}',
              owner,
              repo,
              head: 'release/${{ env.NEW_VERSION }}',
              base: 'main',
              body: [
                'Adds release data',
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'
              ].join('\n')
            });
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['release', 'automated pr']
            });
#            await github.rest.pulls.createReview({
#              owner,
#              repo,
#              pull_number: result.data.number,
#              event: 'APPROVE'
#            });
#            await github.rest.pulls.merge({
#              owner,
#              repo,
#              pull_number: result.data.number,
#              merge_method: 'merge'
#            });
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          generate_release_notes: true

  publish-package:
    needs: [github-release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      NEW_VERSION: ${{needs.github-release.outputs.NEW_VERSION}}
    steps:
      - uses: actions/checkout@v3
      - run: git checkout ${{ env.NEW_VERSION }}
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@lion5'
      - run: npm ci
      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-documentation:
    needs: [github-release]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    env:
      NEW_VERSION: ${{needs.github-release.outputs.NEW_VERSION}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: git checkout ${{ env.NEW_VERSION }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install Packages
        run: npm ci
      - name: Build Library Documentation
        run: npm run build-storybook
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './storybook-static/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
