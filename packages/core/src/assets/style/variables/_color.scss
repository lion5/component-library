/* Color Definitions */
$palettes: (
        // Primary Color = Brand Color = Accent Color
        'primary': (
                'hue': 230,
                'saturation': 77%,
                'lightness': 45%
        ),
        'success': (
                'hue': 145,
                'saturation': 55%,
                'lightness': 33%
        ),
        /**
          @deprecated use danger color instead
         */
        'warning': (
                'hue': 24,
                'saturation': 83%,
                'lightness': 40%
        ),
        'danger': (
                'hue': 0,
                'saturation': 75%,
                'lightness': 41%
        ),
        'neutral': (
                'hue': 220,
                'saturation': 5%,
                'lightness': 45%
        ),
        'secondary': (
                'hue': 220,
                'saturation': 5%,
                'lightness': 45%
        )
);

@mixin generate-color-variables($name, $hue, $saturation, $lightness, $baseName: 'light') {
  // Default variables
  --_#{$name}-hue-default: #{$hue};
  --_#{$name}-saturation-default: #{$saturation};
  --_#{$name}-lightness-default: #{$lightness};

  // Overwritable variables
  --_#{$name}-hue: var(--#{$baseName}-#{$name}-hue, var(--_#{$name}-hue-default));
  --_#{$name}-saturation: var(--#{$baseName}-#{$name}-saturation, var(--_#{$name}-saturation-default));
  --_#{$name}-lightness: var(--#{$baseName}-#{$name}-lightness, var(--_#{$name}-lightness-default));

  // Generiert die Farbabstufungen (z.B. --color-primary-100)
  @for $i from 1 through 9 {
    --color-#{$name}-#{$i * 100}: hsl(var(--_#{$name}-hue) var(--_#{$name}-saturation) var(--l-#{$i * 100}));
  }

  // Semantische Hauptvariablen
  --color-#{$name}: hsl(var(--_#{$name}-hue) var(--_#{$name}-saturation) var(--_#{$name}-lightness));
  --color-#{$name}-hover: hsl(var(--_#{$name}-hue) var(--_#{$name}-saturation) calc(var(--_#{$name}-lightness) - 10%));
}

:root {
  color-scheme: light;

  //Lightness Levels
  --l-100: 98%;
  --l-200: 93%;
  --l-300: 89%;
  --l-400: 83%;
  --l-500: 71%;
  --l-600: 46%;
  --l-700: 31%;
  --l-800: 19%;
  --l-900: 15%;

  // Generiert alle Farbpaletten
  @each $name, $props in $palettes {
    @include generate-color-variables($name, map-get($props, 'hue'), map-get($props, 'saturation'), map-get($props, 'lightness'));
  }

  // Allgemeine UI-Farben
  --color-surface-1: var(--color-neutral-100);
  --color-background: white;
  --color-font-1: var(--color-neutral-900);
  --color-font-2: var(--color-neutral-700);
  --color-font-inverted: var(--color-neutral-100);
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;

    //Lightness Levels
    --l-100: 15%;
    --l-200: 19%;
    --l-300: 31%;
    --l-400: 46%;
    --l-500: 71%;
    --l-600: 83%;
    --l-700: 89%;
    --l-800: 93%;
    --l-900: 98%;

    --_primary-hue: var(--dark-primary-hue, var(--_primary-hue-default));
    --_primary-saturation: var(--dark-primary-saturation, var(--_primary-saturation-default));
    --_primary-lightness: var(--dark-primary-lightness, var(--_primary-lightness-default));
    --_success-hue: var(--dark-success-hue, var(--_success-hue-default));
    --_success-saturation: var(--dark-success-saturation, var(--_success-saturation-default));
    --_danger-hue: var(--dark-danger-hue, var(--_danger-hue-default));
    --_danger-saturation: var(--dark-danger-saturation, var(--_danger-saturation-default));

    --color-white: #000;
    --color-black: #fff;

    // Allgemeine UI-Farben
    --color-surface-1: var(--color-neutral-100);
    --color-background: black;
    --color-font-1: var(--color-neutral-100);
    --color-font-2: var(--color-neutral-300);
    --color-font-inverted: var(--color-neutral-900);
  }
}

:root {
  color-scheme: dark light;

  --color-white: #fff;
  --color-black: #000;
  --color-light: var(--color-neutral-100);
  --color-dark: var(--color-neutral-900);
}

// Special Colors
:root {
  --color-primary-surface: var(--color-primary-100);
  --color-neutral-surface: var(--color-neutral-100);
  --color-success-surface: var(--color-success-100);

  --warning-hue: 45;
  --warning-saturation: 100%;
  //--color-warning: hsl(var(--warning-hue) var(--warning-saturation) 51.4%);
  --color-warning-surface: hsl(var(--warning-hue) var(--warning-saturation) 98%);
  //--color-warning-hover: hsl(var(--warning-hue) var(--warning-saturation) 40%);

  //--color-danger: var(--color-danger-600);
  --color-danger-surface: var(--color-danger-100);
  --color-danger-surface-200: var(--color-danger-200);
  --color-danger-surface-300: var(--color-danger-300);
  //--color-danger-hover: var(--color-danger-700);

  --color-font-1: hsl(var(--_primary-hue) 5% var(--l-800));
  --color-font-2: hsl(var(--_primary-hue) 8% var(--l-700));
  --color-font-inverted: hsl(var(--_primary-hue) 15% var(--l-100));

  --color-surface-1: var(--color-primary-100);
  --color-surface-2: var(--color-primary-200);
  --color-background: var(--color-neutral-100);
}
